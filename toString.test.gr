module ToStringTest

from "./toString.gr" include ToString
use ToString.{ toString }

// Heap values
assert toString((1, 2, 3)) == "(1, 2, 3)" // Tuple
assert toString(
  (
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    7,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
  )
)
  == "(\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  7,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n)" // Tuple - Multiline
assert toString([> 1, 2, 3]) == "[>1, 2, 3]" // Array
assert toString(
  [>
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
  ]
)
  == "[>\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  22,\n  23,\n]" // Array - Multiline
// TODO: Record
// TODO: ADT
// TODO: Lambda
assert toString(() => void) == "<lambda>" // Lambda
assert toString((a, b, c) => void) == "<lambda>" // Lambda

// TODO: String
assert toString(b"test") == "<bytes: 74 65 73 74>" // Bytes
assert toString(
  b"123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789123456789"
)
  == "<bytes: 31 32 33 34 35 36 37 38 39 31 32 33 34 35 36 37 38 39 31 32 33 34 35 36 37 38 39 31 32 33 34 35...>" // Bytes
assert toString(-9_000_000_000_000_000_000L) == "-9000000000000000000" // Boxed Number - Int64
assert toString(-32L) == "-32" // Boxed Number - Int64
assert toString(0L) == "0" // Boxed Number - Int64
assert toString(32L) == "32" // Boxed Number - Int64
assert toString(9_000_000_000_000_000_000L) == "9000000000000000000" // Boxed Number - Int64
assert toString(-32.5d) == "-32.5" // Boxed Number - Float64
assert toString(-32.0d) == "-32.0" // Boxed Number - Float64
assert toString(-0.0d) == "0.0" // Boxed Number - Float64
assert toString(0.0d) == "0.0" // Boxed Number - Float64
assert toString(32.0d) == "32.0" // Boxed Number - Float64
assert toString(32.5d) == "32.5" // Boxed Number - Float64
assert toString(-NaNd) == "NaN" // Boxed Number - Float64
assert toString(NaNd) == "NaN" // Boxed Number - Float64
assert toString(-Infinityd) == "-Infinity" // Boxed Number - Float64
assert toString(Infinityd) == "Infinity" // Boxed Number - Float64
// TODO: Rational
// TODO: BigInt
assert toString(-32l) == "-32" // Int32
assert toString(0l) == "0" // Int32
assert toString(32l) == "32" // Int32
assert toString(-32.5f) == "-32.5" // Float32
assert toString(-32.0f) == "-32.0" // Float32
assert toString(-0.0f) == "0.0" // Float32
assert toString(0.0f) == "0.0" // Float32
assert toString(32.0f) == "32.0" // Float32
assert toString(32.5f) == "32.5" // Float32
assert toString(-NaNf) == "NaN" // Float32
assert toString(NaNf) == "NaN" // Float32
assert toString(-Infinityf) == "-Infinity" // Float32
assert toString(Infinityf) == "Infinity" // Float32
assert toString(0ul) == "0" // Uint32
assert toString(32ul) == "32" // Uint32
assert toString(0uL) == "0" // Uint64
assert toString(32uL) == "32" // Uint64
// Short Values
assert toString('a') == "a" // Char
assert toString('\t') == "\t" // Char
assert toString('\'') == "'" // Char
assert toString(-32s) == "-32" // Int8
assert toString(0s) == "0" // Int8
assert toString(32s) == "32" // Int8
assert toString(-32S) == "-32" // Int16
assert toString(0S) == "0" // Int16
assert toString(32S) == "32" // Int16
assert toString(0us) == "0" // UInt8
assert toString(32us) == "32" // UInt8
assert toString(0uS) == "0" // UInt16
assert toString(32uS) == "32" // UInt16
// Constants
assert toString(void) == "void"
assert toString(true) == "true"
assert toString(false) == "false"
// Number
assert toString(-32) == "-32" // Simple Number
assert toString(0) == "0" // Simple Number
assert toString(32) == "32" // Simple Number
assert toString(-9_000_000_000_000_000_000) == "-9000000000000000000" // Int64
assert toString(9_000_000_000_000_000_000) == "9000000000000000000" // Int64
assert toString(-32.5) == "-32.5" // Float64
assert toString(-32.0) == "-32.0" // Float64
assert toString(-0.0) == "0.0" // Float64
assert toString(0.0) == "0.0" // Float64
assert toString(32.0) == "32.0" // Float64
assert toString(32.5) == "32.5" // Float64
assert toString(-NaN) == "NaN" // Float64
assert toString(NaN) == "NaN" // Float64
assert toString(-Infinity) == "-Infinity" // Float64
assert toString(Infinity) == "Infinity" // Float64
// TODO: Rational
// TODO: BigInt
// TODO: Complex Heap Values -- nested, recursive, mixed, nested escaping char, string, '\'', '\t', etc...
// Builtins
// TODO: List
// TODO: Range
// TODO: Option
// TODO: Result
assert toString(box(1)) == "box(1)" // Box
